{"version":3,"sources":["../../../src/queues/utilities/getJobTaskStatus.ts"],"sourcesContent":["import type { BaseJob, JobTaskStatus } from '../config/types/workflowTypes.js'\n\ntype Args = {\n  jobLog: BaseJob['log']\n}\n\nexport const getJobTaskStatus = ({ jobLog }: Args): JobTaskStatus => {\n  const taskStatus: JobTaskStatus = {}\n\n  // First, add (in order) the steps from the config to\n  // our status map\n  for (const loggedJob of jobLog) {\n    if (!taskStatus[loggedJob.taskSlug]) {\n      taskStatus[loggedJob.taskSlug] = {}\n    }\n    if (!taskStatus[loggedJob.taskSlug]?.[loggedJob.taskID]) {\n      taskStatus[loggedJob.taskSlug]![loggedJob.taskID] = {\n        complete: loggedJob.state === 'succeeded',\n        input: loggedJob.input,\n        output: loggedJob.output,\n        taskSlug: loggedJob.taskSlug,\n        totalTried: 1,\n      }\n    } else {\n      const newTaskStatus = taskStatus[loggedJob.taskSlug]![loggedJob.taskID]!\n      newTaskStatus.totalTried += 1\n\n      if (loggedJob.state === 'succeeded') {\n        newTaskStatus.complete = true\n        // As the task currently saved in taskStatus has likely failed and thus has no\n        // Output data, we need to update it with the new data from the successful task\n        newTaskStatus.output = loggedJob.output\n        newTaskStatus.input = loggedJob.input\n        newTaskStatus.taskSlug = loggedJob.taskSlug\n      }\n      taskStatus[loggedJob.taskSlug]![loggedJob.taskID] = newTaskStatus\n    }\n  }\n\n  return taskStatus\n}\n"],"names":["getJobTaskStatus","jobLog","taskStatus","loggedJob","taskSlug","taskID","complete","state","input","output","totalTried","newTaskStatus"],"mappings":"AAMA,OAAO,MAAMA,mBAAmB,CAAC,EAAEC,MAAM,EAAQ;IAC/C,MAAMC,aAA4B,CAAC;IAEnC,qDAAqD;IACrD,iBAAiB;IACjB,KAAK,MAAMC,aAAaF,OAAQ;QAC9B,IAAI,CAACC,UAAU,CAACC,UAAUC,QAAQ,CAAC,EAAE;YACnCF,UAAU,CAACC,UAAUC,QAAQ,CAAC,GAAG,CAAC;QACpC;QACA,IAAI,CAACF,UAAU,CAACC,UAAUC,QAAQ,CAAC,EAAE,CAACD,UAAUE,MAAM,CAAC,EAAE;YACvDH,UAAU,CAACC,UAAUC,QAAQ,CAAC,AAAC,CAACD,UAAUE,MAAM,CAAC,GAAG;gBAClDC,UAAUH,UAAUI,KAAK,KAAK;gBAC9BC,OAAOL,UAAUK,KAAK;gBACtBC,QAAQN,UAAUM,MAAM;gBACxBL,UAAUD,UAAUC,QAAQ;gBAC5BM,YAAY;YACd;QACF,OAAO;YACL,MAAMC,gBAAgBT,UAAU,CAACC,UAAUC,QAAQ,CAAC,AAAC,CAACD,UAAUE,MAAM,CAAC;YACvEM,cAAcD,UAAU,IAAI;YAE5B,IAAIP,UAAUI,KAAK,KAAK,aAAa;gBACnCI,cAAcL,QAAQ,GAAG;gBACzB,8EAA8E;gBAC9E,+EAA+E;gBAC/EK,cAAcF,MAAM,GAAGN,UAAUM,MAAM;gBACvCE,cAAcH,KAAK,GAAGL,UAAUK,KAAK;gBACrCG,cAAcP,QAAQ,GAAGD,UAAUC,QAAQ;YAC7C;YACAF,UAAU,CAACC,UAAUC,QAAQ,CAAC,AAAC,CAACD,UAAUE,MAAM,CAAC,GAAGM;QACtD;IACF;IAEA,OAAOT;AACT,EAAC"}